version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s
    
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      


    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 5s

  producer:
    build: ./producer
    depends_on:
      kafka:
        condition: service_healthy


  consumer:
    build: ./consumer
    depends_on:
      producer:
        condition: service_completed_successfully
      server:
         condition: service_healthy
    volumes:
      - db-data:/app/data  

  server:
    build: ./server

    depends_on:
      - kafka
      
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092  
    volumes:
      - db-data:/app/data 
    ports:
      - "5000:5000"  
    healthcheck:
      test: ["CMD-SHELL", "[ -f /app/data/pokemon.db ]"] 
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

 
volumes:
  db-data:
